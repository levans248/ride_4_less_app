<div class="ride_info">
  <%= form_tag '/ride_details', method: :post do %>
    <div>
      <%= text_field_tag :origin, nil, placeholder: "Pick-Up Location", :class=>"address_details" %>    
    </div>
    <div>
      <%= text_field_tag :destination, nil, placeholder: "Drop Off Location", :class=>"address_details" %>    
    </div>
      <%= submit_tag "GET RIDE INFO", :id=>"request-info" %>
  <% end %>
</div>


<% if params[:commit] %>
  <div class="uber_info wrapper" >
    <p id= "uber_map_title">Uber:</p>
    <ul class="uber_ride_details">
      <li class="list_spacing">Car Type: <%=@estimations[0].display_name%></li> 
      <% if @estimations[0].surge_multiplier > 1 %>
        <li class="list_spacing">Surging: <%=@estimations[0].surge_multiplier%> (<a href="" data-toggle="modal" data-target="#myModal">view map of surge </a>)</li>
      <% else %>
        <li class="list_spacing">Surging: No (<a href="" data-toggle="modal" data-target="#myModal">view map of surge </a>)</li>
      <% end %>  
      <li class="list_spacing">Price Estimate: <%=@estimations[0].estimate%></li>
      <li class="list_spacing">Distance: <%=@estimations[0].distance%> miles</li>
      <li class="list_spacing">Approximate Trip Duration: <%=(@estimations[0].duration.to_f/60).ceil %> minutes</li>
    </ul>
    <div id = "uber_map"></div>
  </div>

  <div class= "bus_info wrapper">
    <p id= "transit_map_title">Transit:</p>
    <ul class="bus_ride_details">
      <li class="list_spacing">Ride Type: Public Transit</li> 
      <li class="list_spacing">Surging: Never</li>
      <% if @google_bus_data["rows"][0]["elements"][0].include? "fare" %>
        <li class="list_spacing">Price Estimate: <%= @google_bus_data["rows"][0]["elements"][0]["fare"]["text"]%></li>
      <% else %>
        <li class="list_spacing">Price Estimate: Pricing Unavailable</li>
      <% end %>  
      <li class="list_spacing">Distance: <%= @google_bus_data["rows"][0]["elements"][0]["distance"]["text"] %></li>
      <li class="list_spacing">Approximate Trip Duration: <%= @google_bus_data["rows"][0]["elements"][0]["duration"]["text"] %></li>
    </ul>
    <div id = "bus_map"></div>
  </div>

  <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title" id="myModalLabel">Uber Surge Relative to Pick Up Address</h4>
        </div>
        <div class="modal-body">
          <div id = "surge_map"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>


  <script src="https://maps.google.com/maps/api/js?sensor=false"></script>
  <script src="https://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerwithlabel/src/markerwithlabel.js"></script>

  <script  type="text/javascript" >
    // for uber map
    var directionsService = new google.maps.DirectionsService();
    var directionsDisplay = new google.maps.DirectionsRenderer();
    
    // for bus map
    var directionsService2 = new google.maps.DirectionsService();
    var directionsDisplay2 = new google.maps.DirectionsRenderer();

    // creates the two maps
    var map = new google.maps.Map(document.getElementById('uber_map'), {
      zoom:7,
      center: {lat: <%= @origin[0]%>, lng: <%= @origin[1]%>}, 
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var map2 = new google.maps.Map(document.getElementById('bus_map'), {
      zoom:7,
      center: {lat: <%= @origin[0]%>, lng: <%= @origin[1]%>},
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    // sets directions on both maps
    directionsDisplay.setMap(map);
    directionsDisplay2.setMap(map2);

    // specify direction details for each map
    var uberRequest = {
      origin: {lat: <%= @origin[0]%>, lng: <%= @origin[1]%>}, 
      destination: {lat: <%=@destination[0]%>, lng: <%=@destination[1]%>},
      travelMode: google.maps.DirectionsTravelMode.DRIVING
    };

    var busRequest = {
      origin: {lat: <%= @origin[0]%>, lng: <%= @origin[1]%>}, 
      destination: {lat: <%=@destination[0]%>, lng: <%=@destination[1]%>},
      travelMode: google.maps.DirectionsTravelMode.TRANSIT
    };

    // put the direction line onto each map
    directionsService.route(uberRequest, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
      } else {
        alert("Uber directions failed: " + status)
      }
    });

    directionsService.route(busRequest, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay2.setDirections(response);
      } else {
        alert("Bus directions failed: " + status)
      }
    });
  </script>

  <script type="text/javascript">

  var surgeMap;
  var startLat = <%= @start_lat %>;
  var startLng = <%= @start_lng %>;
  var surgeArray = <%= @surge_hash %>;

  var surgeMap = new google.maps.Map(
    document.getElementById("surge_map"), {
        center: new google.maps.LatLng(startLat, startLng),
        zoom: 16,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    });

  for(var i=0; i < surgeArray.length; i++) {
    var marker = new MarkerWithLabel({
      position: new google.maps.LatLng(surgeArray[i][0][0], surgeArray[i][0][1]),
      labelContent: surgeArray[i][1],
      labelAnchor: new google.maps.Point(22, 0),
      labelClass: "labels",
      labelStyle: {
        opacity: 0.75
      },
      zIndex: 999999,
      map: surgeMap,
    })
  }

  var pinColor = "008000";
  var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
      new google.maps.Size(21, 34),
      new google.maps.Point(0,0),
      new google.maps.Point(10, 34));
  var pinShadow = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow",
      new google.maps.Size(40, 37),
      new google.maps.Point(0, 0),
      new google.maps.Point(12, 35));

  var marker = new google.maps.Marker({
      position: new google.maps.LatLng(startLat, startLng), 
      map: surgeMap,
      icon: pinImage,
      shadow: pinShadow
  });

  google.maps.event.addDomListener(window, "resize", resizingMap());

  $('#myModal').on('show.bs.modal', function() {
     resizeMap();
  })

  function resizeMap() {
     if(typeof map =="undefined") return;
     setTimeout( function(){resizingMap();} , 400);
  }

  function resizingMap() {
     if(typeof map =="undefined") return;
     var center = surgeMap.getCenter();
     google.maps.event.trigger(surgeMap, "resize");
     surgeMap.setCenter(center); 
  }


  </script>

<%end%>
      














 

 